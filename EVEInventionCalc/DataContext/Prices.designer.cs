#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:2.0.50727.4952
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace EVEInventionCalc.DataContext
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[System.Data.Linq.Mapping.DatabaseAttribute(Name="RawEvePrices")]
	public partial class PricesDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InserttblActiveItem(tblActiveItem instance);
    partial void UpdatetblActiveItem(tblActiveItem instance);
    partial void DeletetblActiveItem(tblActiveItem instance);
    #endregion
		
		public PricesDataContext() : 
				base(global::EVEInventionCalc.Properties.Settings.Default.RawEvePricesConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public PricesDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PricesDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PricesDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public PricesDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<vwBestPrice> vwBestPrices
		{
			get
			{
				return this.GetTable<vwBestPrice>();
			}
		}
		
		public System.Data.Linq.Table<tblInventedItem> tblInventedItems
		{
			get
			{
				return this.GetTable<tblInventedItem>();
			}
		}
		
		public System.Data.Linq.Table<tblActiveItem> tblActiveItems
		{
			get
			{
				return this.GetTable<tblActiveItem>();
			}
		}
	}
	
	[Table(Name="dbo.vwBestPrices")]
	public partial class vwBestPrice
	{
		
		private int _typeId;
		
		private int _regionId;
		
		private int _solarSystemId;
		
		private int _stationId;
		
		private System.Nullable<decimal> _buyPrice;
		
		private System.Nullable<decimal> _sellPrice;
		
		public vwBestPrice()
		{
		}
		
		[Column(Storage="_typeId", DbType="Int NOT NULL")]
		public int typeId
		{
			get
			{
				return this._typeId;
			}
			set
			{
				if ((this._typeId != value))
				{
					this._typeId = value;
				}
			}
		}
		
		[Column(Storage="_regionId", DbType="Int NOT NULL")]
		public int regionId
		{
			get
			{
				return this._regionId;
			}
			set
			{
				if ((this._regionId != value))
				{
					this._regionId = value;
				}
			}
		}
		
		[Column(Storage="_solarSystemId", DbType="Int NOT NULL")]
		public int solarSystemId
		{
			get
			{
				return this._solarSystemId;
			}
			set
			{
				if ((this._solarSystemId != value))
				{
					this._solarSystemId = value;
				}
			}
		}
		
		[Column(Storage="_stationId", DbType="Int NOT NULL")]
		public int stationId
		{
			get
			{
				return this._stationId;
			}
			set
			{
				if ((this._stationId != value))
				{
					this._stationId = value;
				}
			}
		}
		
		[Column(Storage="_buyPrice", DbType="Money")]
		public System.Nullable<decimal> buyPrice
		{
			get
			{
				return this._buyPrice;
			}
			set
			{
				if ((this._buyPrice != value))
				{
					this._buyPrice = value;
				}
			}
		}
		
		[Column(Storage="_sellPrice", DbType="Money")]
		public System.Nullable<decimal> sellPrice
		{
			get
			{
				return this._sellPrice;
			}
			set
			{
				if ((this._sellPrice != value))
				{
					this._sellPrice = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tblInventedItems")]
	public partial class tblInventedItem
	{
		
		private int _typeID;
		
		private bool _isActive;
		
		public tblInventedItem()
		{
		}
		
		[Column(Storage="_typeID", DbType="Int NOT NULL")]
		public int typeID
		{
			get
			{
				return this._typeID;
			}
			set
			{
				if ((this._typeID != value))
				{
					this._typeID = value;
				}
			}
		}
		
		[Column(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this._isActive = value;
				}
			}
		}
	}
	
	[Table(Name="dbo.tblActiveItems")]
	public partial class tblActiveItem : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _itemID;
		
		private bool _isActive;
		
		private System.Nullable<System.DateTime> _lastUpdated;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnitemIDChanging(int value);
    partial void OnitemIDChanged();
    partial void OnisActiveChanging(bool value);
    partial void OnisActiveChanged();
    partial void OnlastUpdatedChanging(System.Nullable<System.DateTime> value);
    partial void OnlastUpdatedChanged();
    #endregion
		
		public tblActiveItem()
		{
			OnCreated();
		}
		
		[Column(Storage="_itemID", DbType="Int NOT NULL", IsPrimaryKey=true)]
		public int itemID
		{
			get
			{
				return this._itemID;
			}
			set
			{
				if ((this._itemID != value))
				{
					this.OnitemIDChanging(value);
					this.SendPropertyChanging();
					this._itemID = value;
					this.SendPropertyChanged("itemID");
					this.OnitemIDChanged();
				}
			}
		}
		
		[Column(Storage="_isActive", DbType="Bit NOT NULL")]
		public bool isActive
		{
			get
			{
				return this._isActive;
			}
			set
			{
				if ((this._isActive != value))
				{
					this.OnisActiveChanging(value);
					this.SendPropertyChanging();
					this._isActive = value;
					this.SendPropertyChanged("isActive");
					this.OnisActiveChanged();
				}
			}
		}
		
		[Column(Storage="_lastUpdated", DbType="DateTime")]
		public System.Nullable<System.DateTime> lastUpdated
		{
			get
			{
				return this._lastUpdated;
			}
			set
			{
				if ((this._lastUpdated != value))
				{
					this.OnlastUpdatedChanging(value);
					this.SendPropertyChanging();
					this._lastUpdated = value;
					this.SendPropertyChanged("lastUpdated");
					this.OnlastUpdatedChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
}
#pragma warning restore 1591
